--- a/tests/tests_e3/net/http_test.py
+++ b/tests/tests_e3/net/http_test.py
@@ -5,6 +5,8 @@
 import time
 from io import BytesIO
 
+import pytest
+
 import requests_toolbelt.multipart
 from e3.net.http import HTTPSession, HTTPError
 
@@ -124,6 +126,7 @@
         with HTTPSession():
             pass
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_retry(self, socket_enabled):
         def func(server, base_url):
             with HTTPSession() as session:
@@ -136,6 +139,7 @@
 
         run_server(RetryHandler, func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_content_dispo(self, socket_enabled):
         def func(server, base_url):
             with HTTPSession() as session:
@@ -147,6 +151,7 @@
 
         run_server(ContentDispoHandler, func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_content_dispo_fileobj(self, socket_enabled):
         def func(server, base_url):
             with HTTPSession() as session:
@@ -157,6 +162,7 @@
 
         run_server(ContentDispoHandler, func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_content_validation(self, socket_enabled):
         def validate(path):
             return False
@@ -170,6 +176,7 @@
 
         run_server(ContentDispoHandler, func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_error(self, socket_enabled):
         def func(server, base_url):
             with HTTPSession() as session:
@@ -187,6 +194,7 @@
 
         run_server(ServerErrorHandler, func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_fallback(self, socket_enabled):
         def func(server, base_url):
             def inner_func(server2, base_url2):
@@ -202,6 +210,7 @@
 
         run_server(ServerErrorHandler, func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_content_abort(self, socket_enabled):
         def func(server, base_url):
             def inner_func(server2, base_url2):
@@ -218,6 +227,7 @@
 
         run_server(ServerErrorHandler, func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_post_stream_data(self, socket_enabled):
         def outter_func(nok_server, nok_url):
             def func(server, url):
@@ -243,6 +253,7 @@
 
         run_server(ServerErrorHandler, outter_func)
 
+    @pytest.mark.skip(reason="PyPI package pytest-socket not available (yet) as Fedora package")
     def test_authorization_header(self, socket_enabled):
         def func(server, base_url):
             with HTTPSession() as session:
--- a/tox.ini
+++ b/tox.ini
@@ -16,9 +16,8 @@
 # Run testsuite with coverage when '-cov' is in the env name
 commands=
     {envpython} {toxinidir}/tests/gen-cov-config.py {toxinidir}/.coveragerc
-    py.test --ignore=build -vv --html=pytest-report.html --self-contained-html \
+    py.test --ignore=build -vv \
     xdist: -n auto \
-    --disable-socket \
     ci: --ci \
     cov: --cov={envsitepackagesdir}/e3 --cov-report= --cov-fail-under=0 --cov-branch \
     []
--- a/setup.py
+++ b/setup.py
@@ -26,8 +26,6 @@
     "test": [
         "mock",
         "pytest",
-        "pytest-html",
-        "pytest-socket",
         "ansi2html",
         "httpretty",
         "ptyprocess",
