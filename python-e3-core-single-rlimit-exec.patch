--- a/setup.py
+++ b/setup.py
@@ -49,7 +49,7 @@
     ],
     packages=find_packages(where="src"),
     package_dir={"": "src"},
-    package_data={"e3": ["py.typed", "os/data/rlimit-*"]},
+    package_data={"e3": ["py.typed", "os/data/rlimit"]},
     install_requires=install_requires,
     extras_require=extras_require,
     entry_points={
--- a/src/e3/os/process.py
+++ b/src/e3/os/process.py
@@ -73,15 +73,11 @@
     signal.signal(signal.SIGPIPE, signal.SIG_DFL)  # all: no cover
 
 
-def get_rlimit(platform: Optional[str] = None) -> str:
-    if platform is None:
-        platform = e3.env.Env().build.platform
-    if platform == "x86_64-windows64":
-        platform = "x86_64-windows"
+def get_rlimit() -> str:
 
     from pkg_resources import resource_filename
 
-    return resource_filename(__name__, os.path.join("data", "rlimit-%s" % platform))
+    return resource_filename(__name__, os.path.join("data", "rlimit"))
 
 
 def quote_arg(arg: str) -> str:
--- a/tests/tests_e3/os/process/main_test.py
+++ b/tests/tests_e3/os/process/main_test.py
@@ -374,9 +374,8 @@
 
 
 def test_no_rlimit(caplog):
-    fake_rlimit = e3.os.process.get_rlimit(platform="null")
     old_get_rlimit = e3.os.process.get_rlimit
-    e3.os.process.get_rlimit = lambda: fake_rlimit  # type: ignore
+    e3.os.process.get_rlimit = lambda: "non_existing_rlimit"
 
     try:
         p1 = e3.os.process.Run([sys.executable, "-c", "print(1)"], timeout=2)
